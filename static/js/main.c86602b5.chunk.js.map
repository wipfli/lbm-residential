{"version":3,"sources":["Map.js","index.js"],"names":["Map","centerLongitude","centerLatitude","zoom","mapContainerRef","useRef","useState","map","setMap","showResidential","setShowResidential","useEffect","maplibregl","container","current","style","center","addControl","NavigationControl","scale","ScaleControl","maxWidth","unit","setLayoutProperty","ref","position","left","right","top","bottom","backgroundColor","margin","padding","type","checked","onChange","value","ReactDOM","render","document","getElementById"],"mappings":"wMA2EeA,EApEH,SAAC,GAIN,IAHHC,EAGE,EAHFA,gBACAC,EAEE,EAFFA,eACAC,EACE,EADFA,KAEMC,EAAkBC,iBAAO,MAD7B,EAEoBC,mBAAS,MAF7B,mBAEKC,EAFL,KAEUC,EAFV,OAG4CF,oBAAS,GAHrD,mBAGKG,EAHL,KAGsBC,EAHtB,KA+BF,OA1BAC,qBAAU,WACN,IAAMJ,EAAM,IAAIK,IAAWZ,IAAI,CAC3Ba,UAAWT,EAAgBU,QAC3BC,MAAOA,EACPC,OAAQ,CAACf,EAAiBC,GAC1BC,KAAMA,IAEVI,EAAIU,WAAW,IAAIL,IAAWM,mBAC9B,IAAMC,EAAQ,IAAIP,IAAWQ,aAAa,CACtCC,SAAU,GACVC,KAAM,WAEVf,EAAIU,WAAWE,GACfX,EAAOD,KACR,IAEHI,qBAAU,WACFJ,GACAA,EAAIgB,kBACA,sBACA,aACAd,EAAkB,UAAY,UAGvC,CAACA,IAGA,gCACI,qBACIe,IAAKpB,EACLW,MAAO,CACHU,SAAU,WACVC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,KAGhB,sBACId,MAAO,CACHU,SAAU,WACVC,KAAM,EACNE,IAAK,EACLE,gBAAiB,QACjBC,OAAQ,GACRC,QAAS,IAPjB,UAUI,uBACIC,KAAK,WACLC,QAASzB,EACT0B,SAAU,kBAAMzB,GAAmB,SAAA0B,GAAK,OAAKA,QAbrD,kCCjDZC,IAASC,OACP,cAAC,EAAD,CACErC,gBAAiB,SACjBC,eAAgB,UAChBC,KAAM,KAEPoC,SAASC,eAAe,U","file":"static/js/main.c86602b5.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\n\nimport maplibregl from 'maplibre-gl'\nimport 'maplibre-gl/dist/maplibre-gl.css'\n\nimport style from './style'\n\nconst Map = ({\n    centerLongitude,\n    centerLatitude,\n    zoom,\n}) => {\n    const mapContainerRef = useRef(null)\n    const [map, setMap] = useState(null)\n    const [showResidential, setShowResidential] = useState(false)\n\n    useEffect(() => {\n        const map = new maplibregl.Map({\n            container: mapContainerRef.current,\n            style: style,\n            center: [centerLongitude, centerLatitude],\n            zoom: zoom,\n        })\n        map.addControl(new maplibregl.NavigationControl())\n        const scale = new maplibregl.ScaleControl({\n            maxWidth: 80,\n            unit: 'metric'\n        })\n        map.addControl(scale)\n        setMap(map)\n    }, [])\n\n    useEffect(() => {\n        if (map) {\n            map.setLayoutProperty(\n                'landuse-residential',\n                'visibility',\n                showResidential ? 'visible' : 'none'\n            )\n        }\n    }, [showResidential])\n\n    return (\n        <div>\n            <div\n                ref={mapContainerRef}\n                style={{\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                }}\n            />\n            <div\n                style={{\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    backgroundColor: 'white',\n                    margin: 10,\n                    padding: 10,\n                }}\n            >\n                <input\n                    type=\"checkbox\"\n                    checked={showResidential}\n                    onChange={() => setShowResidential(value => !value)}\n                />\n                show landuse=residential\n            </div>\n        </div>\n    )\n}\n\nexport default Map","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Map from './Map'\n\nReactDOM.render((\n  <Map\n    centerLongitude={8.047798}\n    centerLatitude={47.359256}\n    zoom={13}\n  />\n), document.getElementById('root'))"],"sourceRoot":""}